name: Action of Action
description: Convert a TS action to JS and push to a release branch
author: hyperbola

inputs:
  github-token:
    description: github token
    required: false
    default: ${{ github.token }}
  dist-dir:
    description: directory whose contents are to be pushed
    required: false
    default: ./dist
  remote-name:
    description: remote name to push to
    required: false
    default: origin
  dist-branch:
    description: target branch to push the build
    required: false
    default: release
  user-name:
    description: commit user for the build
    required: false
    default: bot
  user-email:
    description: commit email for the build
    required: false
    default: bot@hyperbola.me

runs:
  using: composite
  steps:
    - uses: actions/checkout@v4
    - name: Install yq command
      uses: mikefarah/yq@master
    - name: Determine Node.js version
      id: node-version
      shell: /usr/bin/bash -e {0}
      run: |
        TARGET_NODE_VERSION=$(yq .runs.using action.yml | sed -e 's/^node//')
        echo "version=${TARGET_NODE_VERSION}" >> "$GITHUB_OUTPUT"
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ steps.node-version.outputs.version }}
    - name: Install pnpm and project dependencies
      uses: pnpm/action-setup@v2
      with:
        version: ^8.14.2
        run_install: true
    - name: Build project
      shell: /usr/bin/bash -e {0}
      run: pnpm build
    - name: Get version
      id: version
      uses: wdzeng/version@v1
      with:
        prefix: v
    - name: Push to release branch
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ inputs.github-token }}
        publish_dir: ${{ inputs.dist-dir }}
        publish_branch: ${{ inputs.dist-branch }}
        full_commit_message: build ${{ github.sha }} (${{ steps.version.outputs.version }})
        user_name: ${{ inputs.user-name }}
        user_email: ${{ inputs.user-email }}
        force_orphan: false
        disable_nojekyll: true
    - name: Bump version
      shell: /usr/bin/bash -e {0}
      env:
        VER_MAJ: ${{ steps.version.outputs.major }}
        VER_MIN: ${{ steps.version.outputs.minor }}
        VERSION: ${{ steps.version.outputs.version }}
        PRERELEASE: ${{ steps.version.outputs.pre-release }}
      run: |
        # Set source version tag.
        git tag src-$VERSION HEAD

        # Set destination version tags.
        git fetch ${{ inputs.remote-name }} ${{ inputs.dist-branch }}
        git tag $VERSION ${{ inputs.remote-name }}/${{ inputs.dist-branch }}
        if [[ "$PRERELEASE" == 'false' ]]; then
          git tag -f $VER_MIN ${{ inputs.remote-name }}/${{ inputs.dist-branch }}
          git tag -f $VER_MAJ ${{ inputs.remote-name }}/${{ inputs.dist-branch }}
        fi

        # Push tags to remote.
        git push ${{ inputs.remote-name }} src-$VERSION $VERSION
        if [[ "$PRERELEASE" == 'false' ]]; then
          git push -f origin $VER_MIN $VER_MAJ
        fi
